// Generated by CoffeeScript 1.6.1
(function() {
  var FormattedDate,
    _this = this;

  FormattedDate = (function() {

    FormattedDate.extend = function() {
      Date.prototype.strftime = function(format) {
        return (new FormattedDate(this)).strftime(format);
      };
      return true;
    };

    function FormattedDate(date) {
      var _this = this;
      this.date = date;
      this.substitutions = function() {
        return FormattedDate.prototype.substitutions.apply(_this, arguments);
      };
      this.day_name = function() {
        return FormattedDate.prototype.day_name.apply(_this, arguments);
      };
      this.month_name = function() {
        return FormattedDate.prototype.month_name.apply(_this, arguments);
      };
      this.strftime = function(format) {
        return FormattedDate.prototype.strftime.apply(_this, arguments);
      };
    }

    FormattedDate.prototype.strftime = function(format) {
      var g, p, _ref;
      _ref = this.substitutions();
      for (p in _ref) {
        g = _ref[p];
        format = format.replace("%" + p, g());
      }
      return format;
    };

    FormattedDate.prototype.pad = function(value, length, char) {
      var result;
      if (length == null) {
        length = 2;
      }
      if (char == null) {
        char = '0';
      }
      result = value;
      while (("" + result).length < length) {
        result = "" + char + result;
      }
      return result;
    };

    FormattedDate.prototype.month_name = function() {
      return ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'Oktober', 'November', 'December'][this.date.getMonth()];
    };

    FormattedDate.prototype.day_name = function() {
      return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][this.date.getDay()];
    };

    FormattedDate.prototype.substitutions = function() {
      var _this = this;
      return {
        'Y': function() {
          return _this.date.getFullYear();
        },
        'm': function() {
          return _this.pad(_this.date.getMonth() + 1);
        },
        'd': function() {
          return _this.pad(_this.date.getDate());
        },
        'C': function() {
          return Math.floor(_this.date.getFullYear() / 100);
        },
        'y': function() {
          return _this.pad(_this.date.getFullYear() % 100);
        },
        'B': function() {
          return _this.month_name();
        },
        '^B': function() {
          return _this.month_name().toUpperCase();
        },
        'b': function() {
          return _this.month_name().slice(0, 3);
        },
        '^b': function() {
          return _this.month_name().slice(0, 3).toUpperCase();
        },
        'h': function() {
          return _this.month_name().slice(0, 3);
        },
        '^h': function() {
          return _this.month_name().slice(0, 3).toUpperCase();
        },
        'e': function() {
          return _this.date.getDate();
        },
        'j': function() {
          var from;
          from = new Date("" + (_this.date.getFullYear()) + "-01-01 00:00:00");
          return Math.ceil((_this.date - from) / (1000 * 60 * 60 * 24));
        },
        'H': function() {
          return _this.pad(_this.date.getHours());
        },
        'k': function() {
          return _this.date.getHours();
        },
        'I': function() {
          return _this.pad((_this.date.getHours() > 12 ? _this.date.getHours() - 12 : _this.date.getHours()), 2, '0');
        },
        'l': function() {
          return _this.pad((_this.date.getHours() > 12 ? _this.date.getHours() - 12 : _this.date.getHours()), 2, ' ');
        },
        'p': function() {
          if (_this.date.getHours() - 12 >= 0) {
            return 'am';
          } else {
            return 'pm';
          }
        },
        'P': function() {
          return (_this.date.getHours() - 12 >= 0 ? 'am' : 'pm').toUpperCase();
        },
        'M': function() {
          return _this.pad(_this.date.getMinutes());
        },
        'S': function() {
          return _this.pad(_this.date.getSeconds());
        },
        'L': function() {
          return _this.pad(_this.date.getMilliseconds(), 3);
        },
        '[\d]+N': function() {
          return 'NOT SUPPORTED IN JAVASCRIPT';
        },
        'A': function() {
          return _this.day_name();
        },
        '^A': function() {
          return _this.day_name().toUpperCase();
        },
        'a': function() {
          return _this.day_name().slice(0, 3);
        },
        '^a': function() {
          return _this.day_name().slice(0, 3).toUpperCase();
        },
        'u': function() {
          return 'NOT IMPLEMENTED';
        },
        'w': function() {
          return _this.date.getDay();
        }
      };
    };

    return FormattedDate;

  })();

  this.FormattedDate = FormattedDate;

}).call(this);
